.TH ncftpget 1 "NcFTP Software" ncftpget
.SH NAME
ncftpget - Internet file transfer program for scripts
.SH "SYNOPSIS"
.PP
.B ncftpget
.RI [ "options" ]
.I "remote-host" "local-directory" "remote-files..."
.PP
.B ncftpget
-f login.cfg
.RI [ "options" ]
.I "local-directory" "remote-files..."
.PP
.B ncftpget
.RI [ "options" ]
.I "ftp://url.style/host/path/name"
.\"-------
.SH "OPTIONS"
.\"-------
.SS
Command line flags:
.TP 8
.RI "-u " "XX"
Use username
.I XX
instead of anonymous.
.TP 8
.RI "-p " "XX"
Use password
.I XX
with the username.
.TP 8
.RI "-P " "XX"
Use port number
.I XX
instead of the default FTP service port (21).
.TP 8
.RI "-d " "XX"
Use the file
.I XX
for debug logging.
.TP 8
-a
Use ASCII transfer type instead of binary.
.TP 8
.RI "-t " "XX"
Timeout after
.I XX
seconds.
.TP 8
-v/-V
Do (do not) use progress meters.
The default is to use progress meters if the output stream is a TTY.
.TP 8
.RI "-f " "XX"
Read the file
.I XX
for host, user, and password information.
.TP 8
-A
Append to local files, instead of overwriting them.
.TP 8
-z/-Z
Do (do not) try to resume transfers.
The default is to try to resume (\-z).
.TP 8
-F
Use passive (PASV) data connections.
.TP 8
-DD
Delete remote file after successfully downloading it.
.TP 8
-R
Recursive mode; copy whole directory trees.
.TP 8
.RI "-r " "XX"
Redial a maximum of 
.I XX
times until connected to the remote FTP server.
.\"-------
.SH "DESCRIPTION"
.\"-------
.PP
The
purpose of
.I ncftpget
is to do file transfers from the command-line
without entering an interactive shell.
This lets you write shell scripts or other unattended
processes that can do FTP.
It is also useful for advanced users who
want to retrieve files from the shell command line without
entering an interactive FTP program such as
.IR ncftp "."
.PP
One particularly useful feature of this program is that
you can give it a
.I uniform resource locator
as the only argument and the program will download
that file.
You can then copy and paste from your web browser
or newsreader and use that URL.
Example:
.RS 4
.sp
$ cd /tmp
.br
$ ncftpget ftp://ftp.ncftp.com/pub/ncftp/ncftp.tar.Z
.br
$ zcat ncftp.tar.Z | tar xf -
.br
.RE
.PP
By default the program tries to open the remote host
and login anonymously, but you can specify a username
and password information.
The
.B -u
option is used to specify the username to login as,
and the
.B -p
option is used to specify the password.
If you are running the program from the shell, you may
omit the
.B -p
option and the program will prompt you for the password.
.PP
Using the 
.B -u
and
.B -p
options are not recommended, because your account information
is exposed to anyone who can see your shell script or your
process information.  For example, someone using the
.I ps
program could see your password while the program runs.
.PP
You may use the
.B -f
option instead to specify a file with the account information.
However, this is still not secure because anyone who
has read access to the information file can see the
account information.
Nevertheless, if you choose to use the
.B -f
option the file should look something like this:
.RS 4
.sp
host Bozo.probe.net
.br
user gleason
.br
pass mypasswd
.br
.sp
.RE
Don't forget to change the permissions on this file
so no one else can read them.
.PP
The
.B -d
option is very useful when you are trying to diagnose
why a file transfer is failing.
It prints out the
entire FTP conversation to the file you specify, so
you can get an idea of what went wrong.  
If you specify the special name
.I stdout
as the name of the debugging output file, the output
will instead print to the screen.  Example:
.RS 4
.sp
$ ncftpget -d stdout ftp.ncftp.com . /pub/ncftp/README
.br
220: ftp.ncftp.com FTP server ready.
.br
Connected to ftp.ncftp.com.
.br
Cmd: USER anonymous
.br
331: Guest login ok, send your complete e-mail address as password.
.br
Cmd: PASS xxxxxxxx
.br
230: Welcome!
.br
Logged in to ftp.ncftp.com as anonymous.
.br
Cmd: TYPE I
.br
200: Type set to I.
.br
Cmd: SIZE /pub/ncftp/README
.br
550: /pub/ncftp/README: not a plain file.
.br
Cmd: MDTM /pub/ncftp/README
.br
550: /pub/ncftp/README: No such file or directory.
.br
Cmd: PORT 192,168,1,17,6,76
.br
200: PORT command successful.
.br
Cmd: RETR /pub/ncftp/README
.br
550: /pub/ncftp/README: No such file OR directory.
.br
ncftpget: file retrieval error: could not start data transfer.
.br
Cmd: QUIT
.br
221: Goodbye.
.br
.RE
.PP
Using ASCII mode is helpful when the text format of your host
differs from that of the remote host.
For example, if you are retrieving a \.TXT file from
a Windows-based host to a UNIX system, you could use the
.B -a
flag which would use ASCII transfer mode so that the file
created on the UNIX system would be in the UNIX text
format instead of the MS\-DOS text format.
.PP
You can retrieve an entire directory tree of files by
using the
.B -R
flag.
However, this will work only if the remote FTP server
is a UNIX server, or emulates UNIX's list output.
Example:
.RS 4
.sp
$ ncftpget -R ftp.ncftp.com /tmp /pub/ncftp
.br
.sp
.RE
This would create a /tmp/ncftp hierarchy.
.\"-------
.SH "DIAGNOSTICS"
.\"-------
.PP
.I ncftpget
returns the following exit values:
.TP 8
0
Success.
.TP 8
1
Could not connect to remote host.
.TP 8
2
Could not connect to remote host - timed out.
.TP 8
3
Transfer failed.
.TP 8
4
Transfer failed - timed out.
.TP 8
5
Directory change failed.
.TP 8
6
Directory change failed - timed out.
.TP 8
7
Malformed URL.
.TP 8
8
Usage error.
.TP 8
9
Error in login configuration file.
.TP 8
10
Library initialization failed.
.TP 8
11
Session initialization failed.
.\"-------
.SH "AUTHOR"
.\"-------
.PP
Mike Gleason, NcFTP Software (http://www.NcFTP.com).
.\"-------
.SH "SEE ALSO"
.\"-------
.PP
.IR ncftpput (1),
.IR ncftp (1),
.IR ftp (1),
.IR rcp (1),
.IR tftp (1).
.PP
.IR "LibNcFTP" " (http://www.ncftp.com/libncftp/)."
